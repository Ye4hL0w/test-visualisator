{"version":3,"file":"vis-graph.esm.js","sources":["../components/VisGraph.js"],"sourcesContent":["/**\n * Composant simplifié de visualisation de graphe D3.js\n */\nexport class VisGraph extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.nodes = [];\n    this.links = [];\n    this.width = 800;\n    this.height = 600;\n    this.selectedNode = null;\n    this.tooltipTimeout = null;\n    this.currentEndpoint = null; // Stocker l'endpoint actif\n  }\n\n  /**\n   * Liste des attributs à observer\n   */\n  static get observedAttributes() {\n    return ['width', 'height'];\n  }\n\n  /**\n   * Gestion des changements d'attributs\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    if (name === 'width') {\n      this.width = parseInt(newValue) || 800;\n      this.render();\n    } else if (name === 'height') {\n      this.height = parseInt(newValue) || 600;\n      this.render();\n    }\n  }\n\n  /**\n   * Initialisation quand le composant est ajouté au DOM\n   */\n  connectedCallback() {\n    this.render();\n  }\n\n  /**\n   * Définit manuellement les données\n   */\n  setData(nodes, links) {\n    this.nodes = nodes;\n    this.links = links;\n    this.render();\n  }\n\n  /**\n   * Charge les données depuis un endpoint SPARQL\n   */\n  async loadFromSparqlEndpoint(endpoint, query) {\n    try {\n      // Stocker l'endpoint pour les requêtes futures\n      this.currentEndpoint = endpoint;\n      \n      const params = new URLSearchParams();\n      params.append('query', query.trim());\n      params.append('format', 'json');\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/sparql-results+json'\n        },\n        body: params\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Erreur HTTP: ${response.status}`);\n      }\n      \n      const rawData = await response.json();\n      this.lastSparqlData = rawData; // Stocker les données brutes pour référence future\n      const transformedData = this.transformSparqlResults(rawData);\n      \n      this.nodes = transformedData.nodes;\n      this.links = transformedData.links;\n      this.render();\n      \n      return {\n        status: 'success',\n        message: `Données chargées: ${this.nodes.length} nœuds, ${this.links.length} liens`,\n        data: transformedData,\n        rawData: rawData\n      };\n    } catch (error) {\n      console.error('Erreur lors du chargement des données:', error);\n      return {\n        status: 'error',\n        message: `Erreur: ${error.message}`,\n        data: null,\n        rawData: null\n      };\n    }\n  }\n  \n  /**\n   * Essaie de déterminer le label le plus pertinent pour un nœud à partir d'un binding SPARQL.\n   * @param {object} entityBindingValue - L'objet binding pour l'entité (ex: binding[sourceVar]).\n   * @param {string} entityVarName - Le nom de la variable SPARQL pour l'entité (ex: \"gene\", \"proteinOrtholog\").\n   * @param {object} currentBinding - L'ensemble du binding (la ligne de résultat SPARQL).\n   * @param {string[]} allVars - Toutes les variables de la requête SPARQL.\n   */\n  _determineNodeLabelFromBinding(entityBindingValue, entityVarName, currentBinding, allVars) {\n    const defaultId = this.extractIdFromBinding(entityBindingValue);\n\n    if (!entityBindingValue) return defaultId;\n\n    // Priorité 1: Valeur littérale de l'entité elle-même.\n    if (entityBindingValue.type === 'literal') {\n      return entityBindingValue.value;\n    }\n\n    // Si c'est une URI, chercher des labels associés.\n    if (entityBindingValue.type === 'uri') {\n      // Priorité 2: Labels conventionnels directs (ex: geneLabel pour gene).\n      const directLabelSuffixes = ['Label', 'Name', 'Title', 'Term', 'Identifier', 'Id', 'Description'];\n      for (const suffix of directLabelSuffixes) {\n        const directLabelKey = entityVarName + suffix;\n        if (currentBinding[directLabelKey] && currentBinding[directLabelKey].type === 'literal') {\n          return currentBinding[directLabelKey].value;\n        }\n        // Essayer aussi avec la première lettre en minuscule pour le suffixe (ex: entityVarName + 'label')\n        const directLabelKeyLowerSuffix = entityVarName + suffix.charAt(0).toLowerCase() + suffix.slice(1);\n        if (currentBinding[directLabelKeyLowerSuffix] && currentBinding[directLabelKeyLowerSuffix].type === 'literal') {\n          return currentBinding[directLabelKeyLowerSuffix].value;\n        }\n      }\n      \n      // Priorité 3: Labels descriptifs d'autres colonnes.\n      let bestOtherLabel = null;\n      let bestOtherLabelScore = -1;\n\n      const descriptiveKeywords = {\n        label: 5, name: 5, title: 5, term: 4, // Forte pertinence\n        description: 3, summary: 3, comment: 3, text: 2, // Pertinence moyenne\n        taxon: 2, species: 2, organism: 2, // Contexte taxonomique\n        disease: 2, condition: 2, syndrome: 2, // Contexte maladie\n        gene: 1, protein: 1, ensembl: 1, uniprot: 1, // Identifiants/types communs\n        annotation: 1\n      };\n\n      for (const otherVar of allVars) {\n        if (otherVar === entityVarName) continue; // Ne pas se considérer soi-même\n\n        const otherVarBinding = currentBinding[otherVar];\n        if (otherVarBinding && otherVarBinding.type === 'literal' && otherVarBinding.value) {\n          const otherVarLower = otherVar.toLowerCase();\n          let currentScore = 0;\n\n          for (const keyword in descriptiveKeywords) {\n            if (otherVarLower.includes(keyword)) {\n              currentScore = Math.max(currentScore, descriptiveKeywords[keyword]);\n            }\n          }\n          \n          // Bonus si la variable est simplement \"label\", \"name\", \"title\"\n          if (['label', 'name', 'title'].includes(otherVarLower)) currentScore += 2;\n\n          if (currentScore > bestOtherLabelScore) {\n            bestOtherLabelScore = currentScore;\n            bestOtherLabel = otherVarBinding.value;\n          } else if (currentScore === bestOtherLabelScore && bestOtherLabel && otherVarBinding.value.length < bestOtherLabel.length) {\n            // En cas d'égalité de score, préférer le label le plus court (moins verbeux)\n            bestOtherLabel = otherVarBinding.value;\n          }\n        }\n      }\n\n      if (bestOtherLabel) {\n        return bestOtherLabel;\n      }\n    }\n\n    // Priorité 4: Identifiant extrait.\n    return defaultId;\n  }\n  \n  /**\n   * Transforme les résultats SPARQL en format compatible avec le graphe\n   */\n  transformSparqlResults(results) {\n    if (!results.results || !results.results.bindings || results.results.bindings.length === 0) {\n      console.warn(\"Résultats SPARQL vides ou invalides\");\n      return { nodes: [], links: [] };\n    }\n    \n    const nodesMap = new Map();\n    const linksMap = new Map();\n    \n    const vars = results.head.vars;\n    console.log(\"Variables SPARQL disponibles:\", vars);\n    \n    const sourceVar = vars[0];\n    const targetVar = vars.length > 1 ? vars[1] : null;\n    \n    results.results.bindings.forEach(binding => {\n      if (binding[sourceVar]) {\n        const sourceId = this.extractIdFromBinding(binding[sourceVar]);\n        const sourceLabel = this._determineNodeLabelFromBinding(binding[sourceVar], sourceVar, binding, vars);\n        const sourceUri = binding[sourceVar].type === 'uri' ? binding[sourceVar].value : null;\n        \n        if (!nodesMap.has(sourceId)) {\n          nodesMap.set(sourceId, {\n            id: sourceId,\n            label: sourceLabel,\n            uri: sourceUri,\n            originalData: { ...binding }\n          });\n        }\n        \n        if (targetVar && binding[targetVar]) {\n          const targetId = this.extractIdFromBinding(binding[targetVar]);\n          const targetLabel = this._determineNodeLabelFromBinding(binding[targetVar], targetVar, binding, vars);\n          const targetUri = binding[targetVar].type === 'uri' ? binding[targetVar].value : null;\n          \n          if (!nodesMap.has(targetId)) {\n            nodesMap.set(targetId, {\n              id: targetId,\n              label: targetLabel,\n              uri: targetUri,\n              originalData: { ...binding }\n            });\n          }\n          \n          const linkKey = `${sourceId}-${targetId}`;\n          if (!linksMap.has(linkKey)) {\n            linksMap.set(linkKey, {\n              source: sourceId,\n              target: targetId\n            });\n          }\n        }\n      }\n    });\n    \n    return {\n      nodes: Array.from(nodesMap.values()),\n      links: Array.from(linksMap.values())\n    };\n  }\n  \n  /**\n   * Extrait un identifiant d'un binding SPARQL\n   */\n  extractIdFromBinding(binding) {\n    if (!binding) return \"unknown\";\n    // Si la valeur liée est un littéral, sa \"valeur\" est son identifiant pour l'affichage si aucun autre label n'est trouvé.\n    if (binding.type === 'literal') return binding.value;\n\n    const value = binding.value;\n    if (!value) return \"unknown\";\n\n    // Gestion spécifique pour les liens OMA gateway.pl\n    if (value.includes('gateway.pl') && value.includes('p1=')) {\n      try {\n        // Essayer d'extraire p1 proprement avec URLSearchParams\n        // Il faut une base si l'URL est relative, mais ici on attend des URI complètes.\n        const urlObj = new URL(value);\n        const params = new URLSearchParams(urlObj.search);\n        if (params.has('p1')) {\n          return params.get('p1');\n        }\n      } catch (e) {\n        // En cas d'échec du parsing d'URL (ex: URI malformée), tenter une extraction par regex\n        const regexMatch = value.match(/p1=([^&]+)/);\n        if (regexMatch && regexMatch[1]) {\n          return regexMatch[1];\n        }\n      }\n    }\n\n    // Extraction générique par split sur / et #\n    const parts = value.split(/[/#]/);\n    let lastPart = parts.pop(); \n\n    // Si la dernière partie contient encore des paramètres query (ex: ?foo=bar), les enlever.\n    if (lastPart && lastPart.includes('?')) {\n        lastPart = lastPart.split('?')[0];\n    }\n    // Si lastPart est vide (ex: URI se terminant par /), essayer de prendre l'avant-dernière partie si elle existe.\n    if (!lastPart && parts.length > 0) {\n        lastPart = parts.pop();\n    }\n\n    return lastPart || value; // Retourner la dernière partie, ou la valeur originale en dernier recours.\n  }\n\n  /**\n   * Exécute une requête SPARQL détaillée pour un nœud spécifique\n   */\n  async executeNodeQuery(node) {\n    if (!node || !node.uri) {\n      console.error(\"Aucun URI disponible pour ce nœud\");\n      this.showNotification(\"Ce nœud n'a pas d'URI associé\", 'error');\n      return;\n    }\n    \n    try {\n      this.showNotification(`Récupération des détails pour ${node.label}...`);\n      \n      const endpoint = this.currentEndpoint || this.getAttribute('endpoint') || 'https://dbpedia.org/sparql';\n      const queries = this.buildInformativeQueries(node.uri);\n      \n      let allData = {\n        descriptive: null,\n        technical: null,\n        relationships: null\n      };\n      \n      console.log(`[VisGraph] Requêtes pour les détails du nœud ${node.label} (URI: ${node.uri}) sur l'endpoint: ${endpoint}`);\n\n      for (const [queryType, queryContent] of Object.entries(queries)) {\n        console.log(`[VisGraph] Exécution de la requête de type \"${queryType}\":\\n${queryContent}`);\n        try {\n          const data = await this.executeSparqlQuery(endpoint, queryContent);\n          allData[queryType] = data;\n        } catch (error) {\n          console.warn(`[VisGraph] Erreur pour la requête ${queryType}:`, error);\n          this.showNotification(`Erreur lors de la récupération des données de type ${queryType}.`, 'error');\n        }\n      }\n      \n      this.displayRichNodeDetails(node, allData);\n      return { status: 'success', data: allData };\n\n    } catch (error) {\n      console.error('[VisGraph] Erreur majeure lors de la récupération des détails du nœud:', error);\n      this.showNotification(`Erreur: ${error.message}`, 'error');\n      this.displayBasicNodeDetails(node); // Fallback\n      return { status: 'error', message: error.message };\n    }\n  }\n  \n  /**\n   * Construit des requêtes SPARQL informatives selon le type d'URI\n   */\n  buildInformativeQueries(uri) {\n    const queries = {};\n    \n    // Requête pour informations descriptives (labels, définitions, commentaires)\n    queries.descriptive = `\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n      PREFIX dc: <http://purl.org/dc/elements/1.1/>\n      PREFIX dcterms: <http://purl.org/dc/terms/>\n      PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n      \n      SELECT DISTINCT ?property ?value ?lang\n      WHERE {\n        <${uri}> ?property ?value .\n        \n        FILTER (\n          ?property = rdfs:label ||\n          ?property = rdfs:comment ||\n          ?property = skos:prefLabel ||\n          ?property = skos:altLabel ||\n          ?property = skos:definition ||\n          ?property = skos:note ||\n          ?property = dc:title ||\n          ?property = dcterms:title ||\n          ?property = dc:description ||\n          ?property = dcterms:description ||\n          ?property = foaf:name\n        )\n        \n        BIND(LANG(?value) as ?lang)\n      }\n      ORDER BY ?property\n      LIMIT 100\n    `;\n    \n    // Requête pour relations sémantiques\n    queries.relationships = `\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n      \n      SELECT DISTINCT ?property ?value ?valueLabel\n      WHERE {\n        <${uri}> ?property ?value .\n        \n        FILTER (\n          ?property = rdfs:subClassOf ||\n          ?property = rdf:type ||\n          ?property = skos:broader ||\n          ?property = skos:narrower ||\n          ?property = skos:related ||\n          ?property = owl:sameAs ||\n          ?property = owl:equivalentClass ||\n          ?property = rdfs:seeAlso ||\n          ?property = dcterms:isPartOf ||\n          ?property = dcterms:hasPart\n        )\n        \n        OPTIONAL {\n          ?value rdfs:label ?valueLabel .\n          FILTER(LANG(?valueLabel) = \"\" || LANGMATCHES(LANG(?valueLabel), \"en\") || LANGMATCHES(LANG(?valueLabel), \"fr\"))\n        }\n        OPTIONAL {\n            ?value skos:prefLabel ?prefLabel .\n            FILTER(LANG(?prefLabel) = \"\" || LANGMATCHES(LANG(?prefLabel), \"en\") || LANGMATCHES(LANG(?prefLabel), \"fr\"))\n        }\n        BIND(COALESCE(?valueLabel, ?prefLabel, \"\") AS ?valueLabel)\n\n      }\n      ORDER BY ?property\n      LIMIT 50\n    `;\n    \n    // Requête pour propriétés techniques et métadonnées\n    queries.technical = `\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX dc: <http://purl.org/dc/elements/1.1/>\n      PREFIX dcterms: <http://purl.org/dc/terms/>\n      PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n      \n      SELECT DISTINCT ?property ?value ?valueType\n      WHERE {\n        <${uri}> ?property ?value .\n        \n        FILTER (\n          ?property != rdfs:label &&\n          ?property != rdfs:comment &&\n          ?property != skos:prefLabel &&\n          ?property != skos:altLabel &&\n          ?property != skos:definition &&\n          ?property != skos:note &&\n          ?property != dc:title &&\n          ?property != dcterms:title &&\n          ?property != dc:description &&\n          ?property != dcterms:description &&\n          ?property != foaf:name &&\n          ?property != rdfs:subClassOf &&\n          ?property != rdf:type &&\n          ?property != skos:broader &&\n          ?property != skos:narrower &&\n          ?property != skos:related &&\n          ?property != owl:sameAs &&\n          ?property != owl:equivalentClass &&\n          ?property != rdfs:seeAlso &&\n          ?property != dcterms:isPartOf &&\n          ?property != dcterms:hasPart\n        )\n        \n        BIND(\n          IF(isLiteral(?value), \"literal\",\n            IF(isURI(?value), \"uri\", \"unknown\")\n          ) AS ?valueType\n        )\n      }\n      ORDER BY ?property\n      LIMIT 150\n    `;\n    \n    return queries;\n  }\n  \n  /**\n   * Exécute une requête SPARQL\n   */\n  async executeSparqlQuery(endpoint, query) {\n    const params = new URLSearchParams();\n    params.append('query', query.trim());\n    params.append('format', 'json');\n    \n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/sparql-results+json'\n      },\n      body: params\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Erreur HTTP: ${response.status}`);\n    }\n    \n    return await response.json();\n  }\n  \n  /**\n   * Affiche les détails riches d'un nœud\n   */\n  displayRichNodeDetails(node, allData) {\n    const oldPanel = this.shadowRoot.querySelector('.node-details-panel');\n    if (oldPanel) {\n      oldPanel.remove();\n    }\n    \n    const panel = document.createElement('div');\n    panel.className = 'node-details-panel';\n    \n    // En-tête\n    const header = document.createElement('div');\n    header.className = 'panel-header';\n    \n    const title = document.createElement('h2');\n    title.textContent = node.label;\n    title.style.margin = '0';\n    title.style.fontSize = '18px';\n    title.style.fontWeight = 'bold';\n    \n    const closeBtn = document.createElement('button');\n    closeBtn.textContent = '×';\n    closeBtn.className = 'close-btn';\n    closeBtn.addEventListener('click', () => panel.remove());\n    \n    header.appendChild(title);\n    header.appendChild(closeBtn);\n    panel.appendChild(header);\n    \n    // Contenu principal\n    const content = document.createElement('div');\n    content.className = 'panel-content';\n    \n    // Section informations de base (toujours affichée)\n    this.addBasicInfoSection(content, node);\n    \n    // Section contexte du graphe (à partir des données originales du graphe)\n    this.addGraphContextSection(content, node);\n    \n    // Section informations descriptives complètes\n    if (allData.descriptive && allData.descriptive.results && allData.descriptive.results.bindings.length > 0) {\n      this.addCompleteDescriptiveSection(content, allData.descriptive.results.bindings);\n    }\n    \n    // Section relations complètes avec détails\n    if (allData.relationships && allData.relationships.results && allData.relationships.results.bindings.length > 0) {\n      this.addCompleteRelationshipsSection(content, allData.relationships.results.bindings);\n    }\n    \n    // Section propriétés techniques complètes\n    if (allData.technical && allData.technical.results && allData.technical.results.bindings.length > 0) {\n      this.addCompleteTechnicalSection(content, allData.technical.results.bindings);\n    }\n    \n    // Résumé des données récupérées\n    this.addDataSummary(content, allData);\n    \n    panel.appendChild(content);\n    this.shadowRoot.querySelector('.graph-container').appendChild(panel);\n  }\n  \n  /**\n   * Ajoute une section d'informations de base\n   */\n  addBasicInfoSection(container, node) {\n    const section = document.createElement('div');\n    section.className = 'info-section';\n    section.style.marginBottom = '20px';\n    \n    const title = document.createElement('h3');\n    title.textContent = 'Basic Information';\n    title.style.borderBottom = '2px solid #007cba';\n    title.style.paddingBottom = '5px';\n    title.style.marginBottom = '15px';\n    section.appendChild(title);\n    \n    this.addDetailedInfoRow(section, 'Label', node.label);\n    this.addDetailedInfoRow(section, 'URI', node.uri, true);\n    this.addDetailedInfoRow(section, 'Accession', this.extractAccessionFromURI(node.uri));\n    \n    const connections = this.links.filter(l => \n      l.source.id === node.id || l.target.id === node.id\n    ).length;\n    this.addDetailedInfoRow(section, 'Connections in Graph', connections.toString());\n    \n    container.appendChild(section);\n  }\n  \n  /**\n   * Ajoute une section de contexte du graphe basée sur les données originales.\n   */\n  addGraphContextSection(container, node) {\n    if (!node.originalData) return;\n\n    const graphContextInfo = this.extractGraphContext(node);\n    if (graphContextInfo.length === 0) return;\n\n    const section = document.createElement('div');\n    section.className = 'info-section';\n    section.style.marginBottom = '20px';\n    \n    const title = document.createElement('h3');\n    title.textContent = 'Graph Context (from original data)';\n    title.style.borderBottom = '2px solid #17a2b8';\n    title.style.paddingBottom = '5px';\n    title.style.marginBottom = '15px';\n    section.appendChild(title);\n    \n    graphContextInfo.forEach(info => {\n      this.addDetailedInfoRow(section, info.type, info.value, info.isUri);\n    });\n    \n    container.appendChild(section);\n  }\n  \n  /**\n   * Extrait le contexte du graphe d'un nœud à partir de ses données originales.\n   */\n  extractGraphContext(node) {\n    const context = [];\n    if (!node.originalData || !this.lastSparqlData || !this.lastSparqlData.head || !this.lastSparqlData.head.vars) {\n      return context;\n    }\n\n    const mainSparqlVars = this.lastSparqlData.head.vars;\n    const sourceVar = mainSparqlVars[0];\n    const targetVar = mainSparqlVars.length > 1 ? mainSparqlVars[1] : null;\n\n    // Identifier les variables qui pourraient être des labels déjà utilisés pour le nœud principal\n    // (pour éviter de les répéter dans le contexte)\n    const potentialLabelVars = mainSparqlVars.filter(v => \n        v.toLowerCase().includes('label') || \n        v.toLowerCase().includes('name') || \n        v.toLowerCase().includes('title')\n    );\n\n    for (const [key, valueObj] of Object.entries(node.originalData)) {\n      // Exclure les variables principales (source, target) et les variables de label probables\n      // ainsi que les \"meta-variables\" comme type et lang qui sont attachées aux valeurs elles-mêmes.\n      if (key !== sourceVar && \n          key !== targetVar && \n          !potentialLabelVars.includes(key) &&\n          key !== 'type' && key !== 'lang' && // Clés ajoutées par SPARQL JSON pour le type/lang de la valeur\n          valueObj && typeof valueObj.value !== 'undefined') { \n        \n        context.push({\n          type: this.getReadablePropertyName(key), \n          value: valueObj.value,\n          isUri: valueObj.type === 'uri'\n        });\n      }\n    }\n    \n    // Ne pas ajouter les \"Connected Nodes in Graph\" ici, car cela peut être redondant\n    // avec les informations de base et le graphe lui-même.\n    // Si on veut les remettre, il faudrait une logique plus fine.\n    \n    return context;\n  }\n  \n  /**\n   * Ajoute la section informations descriptives complètes\n   */\n  addCompleteDescriptiveSection(container, bindings) {\n    const section = document.createElement('div');\n    section.className = 'info-section';\n    section.style.marginBottom = '20px';\n    \n    const title = document.createElement('h3');\n    title.textContent = `Descriptive Information (${bindings.length} properties)`;\n    title.style.borderBottom = '2px solid #28a745';\n    title.style.paddingBottom = '5px';\n    title.style.marginBottom = '15px';\n    section.appendChild(title);\n    \n    bindings.forEach((binding, index) => {\n      const propContainer = document.createElement('div');\n      propContainer.style.marginBottom = '15px';\n      propContainer.style.padding = '12px';\n      propContainer.style.border = '1px solid #dee2e6';\n      propContainer.style.borderRadius = '5px';\n      propContainer.style.backgroundColor = index % 2 === 0 ? '#f8f9fa' : '#ffffff';\n      \n      // Nom de la propriété\n      const propHeader = document.createElement('div');\n      propHeader.style.display = 'flex';\n      propHeader.style.justifyContent = 'space-between';\n      propHeader.style.alignItems = 'center';\n      propHeader.style.marginBottom = '8px';\n      \n      const propName = document.createElement('strong');\n      propName.textContent = this.getReadablePropertyName(binding.property.value);\n      propName.style.color = '#495057';\n      propName.style.fontSize = '14px';\n      propHeader.appendChild(propName);\n      \n      const propType = document.createElement('span');\n      propType.textContent = binding.lang && binding.lang.value ? `[${binding.lang.value}]` : '[text]';\n      propType.style.fontSize = '11px';\n      propType.style.color = '#6c757d';\n      propType.style.backgroundColor = '#e9ecef';\n      propType.style.padding = '2px 6px';\n      propType.style.borderRadius = '3px';\n      propHeader.appendChild(propType);\n      \n      propContainer.appendChild(propHeader);\n      \n      // URI de la propriété\n      const propUri = document.createElement('div');\n      propUri.style.fontSize = '11px';\n      propUri.style.color = '#6c757d';\n      propUri.style.marginBottom = '8px';\n      propUri.style.wordBreak = 'break-all';\n      propUri.innerHTML = `Property URI: <a href=\"${binding.property.value}\" target=\"_blank\" style=\"color: #007cba;\">${binding.property.value}</a>`;\n      propContainer.appendChild(propUri);\n      \n      // Valeur\n      const valueDiv = document.createElement('div');\n      valueDiv.style.color = '#212529';\n      valueDiv.style.fontSize = '13px';\n      valueDiv.style.lineHeight = '1.5';\n      valueDiv.style.padding = '8px';\n      valueDiv.style.backgroundColor = 'rgba(0, 123, 255, 0.1)';\n      valueDiv.style.borderRadius = '3px';\n      valueDiv.style.wordBreak = 'break-word';\n      valueDiv.textContent = binding.value.value;\n      propContainer.appendChild(valueDiv);\n      \n      section.appendChild(propContainer);\n    });\n    \n    container.appendChild(section);\n  }\n  \n  /**\n   * Ajoute la section relations complètes avec détails\n   */\n  addCompleteRelationshipsSection(container, bindings) {\n    const section = document.createElement('div');\n    section.className = 'info-section';\n    section.style.marginBottom = '20px';\n    \n    const title = document.createElement('h3');\n    title.textContent = `Relationships & Classifications (${bindings.length} relations)`;\n    title.style.borderBottom = '2px solid #ffc107';\n    title.style.paddingBottom = '5px';\n    title.style.marginBottom = '15px';\n    section.appendChild(title);\n    \n    // Expliquer la différence avec les connexions du graphe\n    const explanation = document.createElement('div');\n    explanation.style.backgroundColor = '#fff3cd';\n    explanation.style.border = '1px solid #ffeaa7';\n    explanation.style.borderRadius = '4px';\n    explanation.style.padding = '8px';\n    explanation.style.marginBottom = '15px';\n    explanation.style.fontSize = '12px';\n    explanation.innerHTML = `\n      <strong>ℹ️ Note:</strong> These are <strong>semantic relationships</strong> from ontologies (what this term IS), \n      different from the <strong>graph connections</strong> (which entities are associated with this term in your data).\n    `;\n    section.appendChild(explanation);\n    \n    bindings.forEach((binding, index) => {\n      const relationContainer = document.createElement('div');\n      relationContainer.style.marginBottom = '15px';\n      relationContainer.style.padding = '12px';\n      relationContainer.style.border = '1px solid #ffc107';\n      relationContainer.style.borderRadius = '5px';\n      relationContainer.style.backgroundColor = index % 2 === 0 ? '#fff8e1' : '#ffffff';\n      \n      // Type de relation avec explication\n      const relationHeader = document.createElement('div');\n      relationHeader.style.display = 'flex';\n      relationHeader.style.justifyContent = 'space-between';\n      relationHeader.style.alignItems = 'center';\n      relationHeader.style.marginBottom = '8px';\n      \n      const relationType = document.createElement('strong');\n      relationType.textContent = this.getReadablePropertyName(binding.property.value);\n      relationType.style.color = '#856404';\n      relationType.style.fontSize = '14px';\n      relationHeader.appendChild(relationType);\n      \n      const relationBadge = document.createElement('span');\n      relationBadge.textContent = '[SEMANTIC]';\n      relationBadge.style.fontSize = '10px';\n      relationBadge.style.color = '#856404';\n      relationBadge.style.backgroundColor = '#ffc107';\n      relationBadge.style.padding = '2px 6px';\n      relationBadge.style.borderRadius = '3px';\n      relationHeader.appendChild(relationBadge);\n      \n      relationContainer.appendChild(relationHeader);\n      \n      // URI de la propriété de relation\n      const propUri = document.createElement('div');\n      propUri.style.fontSize = '11px';\n      propUri.style.color = '#6c757d';\n      propUri.style.marginBottom = '8px';\n      propUri.style.wordBreak = 'break-all';\n      propUri.innerHTML = `Relation URI: <a href=\"${binding.property.value}\" target=\"_blank\" style=\"color: #007cba;\">${binding.property.value}</a>`;\n      relationContainer.appendChild(propUri);\n      \n      // Entité liée\n      const targetContainer = document.createElement('div');\n      targetContainer.style.padding = '10px';\n      targetContainer.style.backgroundColor = 'rgba(255, 193, 7, 0.1)';\n      targetContainer.style.borderRadius = '4px';\n      targetContainer.style.border = '1px solid rgba(255, 193, 7, 0.3)';\n      \n      // Label de l'entité liée (si disponible)\n      if (binding.valueLabel && binding.valueLabel.value) {\n        const targetLabel = document.createElement('div');\n        targetLabel.style.fontWeight = 'bold';\n        targetLabel.style.color = '#212529';\n        targetLabel.style.fontSize = '14px';\n        targetLabel.style.marginBottom = '6px';\n        targetLabel.textContent = `➤ ${binding.valueLabel.value}`;\n        targetContainer.appendChild(targetLabel);\n        \n        const ontologySourceText = this.getSimpleOntologySource(binding.value.value);\n        if (ontologySourceText) {\n          const sourceDiv = document.createElement('div');\n          sourceDiv.style.fontSize = '11px';\n          sourceDiv.style.color = '#6c757d';\n          sourceDiv.style.marginBottom = '6px';\n          sourceDiv.innerHTML = `📚 <strong>Source:</strong> ${ontologySourceText}`;\n          targetContainer.appendChild(sourceDiv);\n        }\n      }\n      \n      // URI de l'entité liée\n      const targetUri = document.createElement('div');\n      targetUri.style.fontSize = '11px';\n      targetUri.style.color = '#495057';\n      targetUri.style.wordBreak = 'break-all';\n      targetUri.innerHTML = `🔗 Target URI: <a href=\"${binding.value.value}\" target=\"_blank\" style=\"color: #007cba;\">${binding.value.value}</a>`;\n      targetContainer.appendChild(targetUri);\n      \n      relationContainer.appendChild(targetContainer);\n      section.appendChild(relationContainer);\n    });\n    \n    container.appendChild(section);\n  }\n  \n  /**\n   * Extrait une information de source simplifiée depuis une URI (domaine ou préfixe connu).\n   */\n  getSimpleOntologySource(uri) {\n    if (!uri || typeof uri !== 'string') return 'Unknown Source';\n\n    // Priorité aux préfixes bien connus pour les ontologies courantes\n    const knownPrefixes = {\n      'http://www.w3.org/1999/02/22-rdf-syntax-ns#': 'RDF',\n      'http://www.w3.org/2000/01/rdf-schema#': 'RDFS',\n      'http://www.w3.org/2002/07/owl#': 'OWL',\n      'http://www.w3.org/2004/02/skos/core#': 'SKOS',\n      'http://purl.org/dc/elements/1.1/': 'DC',\n      'http://purl.org/dc/terms/': 'DCTERMS',\n      'http://xmlns.com/foaf/0.1/': 'FOAF',\n      'http://purl.obolibrary.org/obo/GO_': 'GO (OBO)',       // Gene Ontology\n      'http://purl.obolibrary.org/obo/DOID_': 'DOID (OBO)',   // Human Disease Ontology\n      'http://purl.obolibrary.org/obo/CHEBI_': 'ChEBI (OBO)', // Chemical Entities of Biological Interest\n      'http://purl.obolibrary.org/obo/CL_': 'CL (OBO)',       // Cell Ontology\n      'http://purl.obolibrary.org/obo/PR_': 'PRO (OBO)',      // Protein Ontology\n      'http://purl.obolibrary.org/obo/UBERON_': 'Uberon (OBO)', // Uber-anatomy ontology\n      'http://purl.obolibrary.org/obo/SO_': 'SO (OBO)',       // Sequence Ontology\n      'http://purl.obolibrary.org/obo/NCBITaxon_': 'NCBI Taxonomy (OBO)',\n      'http://purl.obolibrary.org/obo/RO_': 'RO (OBO)', // Relations Ontology\n      'http://purl.obolibrary.org/obo/BFO_': 'BFO (OBO)', // Basic Formal Ontology\n      'http://purl.uniprot.org/core/': 'UniProt Core',\n      'http://rdf.ebi.ac.uk/terms/ensembl/' : 'Ensembl (EBI)',\n      'http://www.ebi.ac.uk/ols/ontologies/': 'OLS (EBI)'\n    };\n\n    for (const prefix in knownPrefixes) {\n      if (uri.startsWith(prefix)) {\n        return knownPrefixes[prefix];\n      }\n    }\n\n    // Si aucun préfixe connu, essayer d'extraire le nom de domaine\n    try {\n      const url = new URL(uri);\n      // Cas spécifique pour purl.obolibrary.org si non capturé par préfixe direct\n      if (url.hostname === 'purl.obolibrary.org' && url.pathname.startsWith('/obo/')) {\n        const pathParts = url.pathname.split('/');\n        if (pathParts.length > 2 && pathParts[1] === 'obo') {\n            const oboTermPart = pathParts[2];\n            const oboNamespace = oboTermPart.split('_')[0];\n            if (oboNamespace) return `${oboNamespace.toUpperCase()} (OBO Library)`;\n        }\n        return 'OBO Library';\n      }\n      return url.hostname; // Retourne le nom de domaine comme source générique\n    } catch (error) {\n      // En cas d'URI invalide ou relative (peu probable ici car on attend une URI de ?value)\n      // Tenter une extraction simple du \"namespace\" avant le # ou le dernier /\n      const hashIndex = uri.lastIndexOf('#');\n      if (hashIndex > 0) {\n        const potentialNs = uri.substring(0, hashIndex);\n        if (potentialNs.length > 5) return potentialNs; // Éviter les \"http:\"\n      }\n      const slashIndex = uri.lastIndexOf('/');\n      if (slashIndex > 0) {\n        const potentialNs = uri.substring(0, slashIndex);\n        if (potentialNs.length > 5 && potentialNs.includes(':/')) return potentialNs;\n      }\n      return 'Unknown Source'; // Fallback final\n    }\n  }\n\n  /**\n   * Ajoute la section propriétés techniques complètes\n   */\n  addCompleteTechnicalSection(container, bindings) {\n    const section = document.createElement('div');\n    section.className = 'info-section';\n    section.style.marginBottom = '20px';\n    \n    const titleContainer = document.createElement('div');\n    titleContainer.style.cursor = 'pointer';\n    titleContainer.style.borderBottom = '2px solid #6c757d';\n    titleContainer.style.paddingBottom = '5px';\n    titleContainer.style.marginBottom = '15px';\n    \n    const title = document.createElement('h3');\n    title.textContent = `▼ Technical Properties (${bindings.length} properties)`;\n    title.style.margin = '0';\n    titleContainer.appendChild(title);\n    \n    const content = document.createElement('div');\n    content.className = 'technical-content';\n    content.style.display = 'none';\n    \n    bindings.forEach((binding, index) => {\n      const propContainer = document.createElement('div');\n      propContainer.style.marginBottom = '12px';\n      propContainer.style.padding = '10px';\n      propContainer.style.border = '1px solid #dee2e6';\n      propContainer.style.borderRadius = '4px';\n      propContainer.style.backgroundColor = index % 2 === 0 ? '#f8f9fa' : '#ffffff';\n      \n      // En-tête de la propriété technique\n      const propHeader = document.createElement('div');\n      propHeader.style.display = 'flex';\n      propHeader.style.justifyContent = 'space-between';\n      propHeader.style.alignItems = 'center';\n      propHeader.style.marginBottom = '6px';\n      \n      const propName = document.createElement('strong');\n      propName.textContent = binding.property.value.split(/[/#]/).pop();\n      propName.style.fontSize = '12px';\n      propName.style.color = '#495057';\n      propHeader.appendChild(propName);\n      \n      const valueType = binding.valueType ? binding.valueType.value : 'unknown';\n      const typeBadge = document.createElement('span');\n      typeBadge.textContent = valueType.toUpperCase();\n      typeBadge.style.fontSize = '9px';\n      typeBadge.style.color = valueType === 'uri' ? '#007cba' : '#28a745';\n      typeBadge.style.backgroundColor = valueType === 'uri' ? '#e3f2fd' : '#e8f5e9';\n      typeBadge.style.padding = '2px 4px';\n      typeBadge.style.borderRadius = '2px';\n      propHeader.appendChild(typeBadge);\n      \n      propContainer.appendChild(propHeader);\n      \n      // URI complète de la propriété\n      const fullPropUri = document.createElement('div');\n      fullPropUri.style.fontSize = '10px';\n      fullPropUri.style.color = '#6c757d';\n      fullPropUri.style.marginBottom = '6px';\n      fullPropUri.style.wordBreak = 'break-all';\n      fullPropUri.innerHTML = `<a href=\"${binding.property.value}\" target=\"_blank\" style=\"color: #6c757d;\">${binding.property.value}</a>`;\n      propContainer.appendChild(fullPropUri);\n      \n      // Valeur\n      const valueDiv = document.createElement('div');\n      valueDiv.style.fontSize = '11px';\n      valueDiv.style.padding = '6px';\n      valueDiv.style.backgroundColor = '#f8f9fa';\n      valueDiv.style.borderRadius = '3px';\n      valueDiv.style.wordBreak = 'break-all';\n      \n      if (valueType === 'uri') {\n        valueDiv.innerHTML = `<a href=\"${binding.value.value}\" target=\"_blank\" style=\"color: #007cba;\">${binding.value.value}</a>`;\n    } else {\n        valueDiv.textContent = binding.value.value;\n      }\n      \n      propContainer.appendChild(valueDiv);\n      content.appendChild(propContainer);\n    });\n    \n    // Toggle functionality\n    titleContainer.addEventListener('click', () => {\n      const isVisible = content.style.display !== 'none';\n      content.style.display = isVisible ? 'none' : 'block';\n      title.textContent = `${isVisible ? '▶' : '▼'} Technical Properties (${bindings.length} properties)`;\n    });\n    \n    section.appendChild(titleContainer);\n    section.appendChild(content);\n    container.appendChild(section);\n  }\n  \n  /**\n   * Ajoute un résumé des données récupérées\n   */\n  addDataSummary(container, allData) {\n    const section = document.createElement('div');\n    section.className = 'info-section';\n    section.style.marginTop = '20px';\n    section.style.padding = '10px';\n    section.style.backgroundColor = '#e9ecef';\n    section.style.borderRadius = '5px';\n    \n    const title = document.createElement('h4');\n    title.textContent = 'Data Retrieval Summary';\n    title.style.color = '#495057';\n    title.style.marginBottom = '8px';\n    section.appendChild(title);\n    \n    const summary = document.createElement('div');\n    summary.style.fontSize = '12px';\n    summary.style.color = '#6c757d';\n    \n    const descriptiveCount = allData.descriptive && allData.descriptive.results ? allData.descriptive.results.bindings.length : 0;\n    const relationshipsCount = allData.relationships && allData.relationships.results ? allData.relationships.results.bindings.length : 0;\n    const technicalCount = allData.technical && allData.technical.results ? allData.technical.results.bindings.length : 0;\n    const totalCount = descriptiveCount + relationshipsCount + technicalCount;\n    \n    summary.innerHTML = `\n      • <strong>${descriptiveCount}</strong> descriptive properties retrieved<br>\n      • <strong>${relationshipsCount}</strong> relationships found<br>\n      • <strong>${technicalCount}</strong> technical properties collected<br>\n      • <strong>${totalCount}</strong> total properties from API<br>\n      • Endpoint: <code>${this.currentEndpoint || 'default'}</code>\n    `;\n    \n    section.appendChild(summary);\n    container.appendChild(section);\n  }\n  \n  /**\n   * Ajoute une ligne d'information détaillée\n   */\n  addDetailedInfoRow(container, label, value, isLink = false) {\n    if (!value || value === 'None' || value === '') return;\n    \n    const row = document.createElement('div');\n    row.style.marginBottom = '10px';\n    row.style.display = 'flex';\n    row.style.flexDirection = 'column';\n    \n    const labelElement = document.createElement('strong');\n    labelElement.textContent = label;\n    labelElement.style.color = '#2c3e50';\n    labelElement.style.fontSize = '13px';\n    labelElement.style.marginBottom = '3px';\n    row.appendChild(labelElement);\n    \n    const valueElement = document.createElement('div');\n    valueElement.style.paddingLeft = '12px';\n    valueElement.style.color = '#34495e';\n    valueElement.style.fontSize = '12px';\n    valueElement.style.lineHeight = '1.4';\n    valueElement.style.wordBreak = 'break-all';\n    \n    if (isLink && typeof value === 'string' && value.startsWith('http')) {\n      const link = document.createElement('a');\n      link.href = value;\n      link.target = '_blank';\n      link.textContent = value;\n      link.style.color = '#007cba';\n      link.style.textDecoration = 'underline';\n      valueElement.appendChild(link);\n    } else {\n      valueElement.textContent = value;\n    }\n    \n    row.appendChild(valueElement);\n    container.appendChild(row);\n  }\n\n  /**\n   * Extrait l'identifiant d'accession depuis une URI\n   */\n  extractAccessionFromURI(uri) {\n    if (!uri) return 'N/A';\n    \n    // Pour d'autres ontologies\n    const oboMatch = uri.match(/([A-Z]+)_(\\d+)/);\n    if (oboMatch) {\n      return `${oboMatch[1]}:${oboMatch[2]}`;\n    }\n    \n    // Retourner la dernière partie de l'URI\n    return uri.split(/[/#]/).pop();\n  }\n\n  /**\n   * Obtient un nom lisible pour une propriété\n   */\n  getReadablePropertyName(propUri) {\n    const mappings = {\n      'subClassOf': 'Is a type of',\n      'type': 'Type',\n      'broader': 'Broader concept',\n      'narrower': 'Narrower concept', \n      'related': 'Related to',\n      'sameAs': 'Same as',\n      'equivalentClass': 'Equivalent to',\n      'BFO_0000050': 'Part of',\n      'RO_0002211': 'Regulates',\n      'RO_0002212': 'Negatively regulates',\n      'RO_0002213': 'Positively regulates',\n      'label': 'Label',\n      'comment': 'Comment',\n      'definition': 'Definition',\n      'hasDefinition': 'Definition',\n      'hasExactSynonym': 'Exact Synonym',\n      'hasRelatedSynonym': 'Related Synonym',\n      'hasBroadSynonym': 'Broad Synonym',\n      'hasNarrowSynonym': 'Narrow Synonym',\n      'prefLabel': 'Preferred Label',\n      'altLabel': 'Alternative Label',\n      'title': 'Title',\n      'description': 'Description',\n      'id': 'ID'\n    };\n    \n    const shortName = propUri.split(/[/#]/).pop();\n    return mappings[shortName] || shortName.replace(/_/g, ' ');\n  }\n\n  /**\n   * Affiche les détails de base d'un nœud\n   */\n  displayBasicNodeDetails(node, container = null) {\n    // Supprimer l'ancien panneau s'il existe\n    const oldPanel = this.shadowRoot.querySelector('.node-details-panel');\n    if (oldPanel) {\n      oldPanel.remove();\n    }\n    \n    // Créer un nouveau panneau\n    const panel = document.createElement('div');\n    panel.className = 'node-details-panel';\n    \n    // En-tête\n    const header = document.createElement('div');\n    header.className = 'panel-header';\n    \n    const title = document.createElement('h2');\n    title.textContent = node.label || node.id;\n    title.style.margin = '0';\n    title.style.fontSize = '18px';\n    title.style.fontWeight = 'bold';\n    \n    const closeBtn = document.createElement('button');\n    closeBtn.textContent = '×';\n    closeBtn.className = 'close-btn';\n    closeBtn.addEventListener('click', () => panel.remove());\n    \n    header.appendChild(title);\n    header.appendChild(closeBtn);\n    panel.appendChild(header);\n    \n    // Contenu principal\n    const content = document.createElement('div');\n    content.className = 'panel-content';\n    \n    const basicInfo = document.createElement('div');\n    basicInfo.innerHTML = `\n      <h4>Informations disponibles</h4>\n      <p><strong>ID:</strong> ${node.id}</p>\n      <p><strong>Label:</strong> ${node.label}</p>\n      ${node.uri ? `<p><strong>URI:</strong> <a href=\"${node.uri}\" target=\"_blank\">${node.uri}</a></p>` : ''}\n    `;\n    \n    // Connexions\n    const connections = this.links.filter(l => \n      l.source.id === node.id || l.target.id === node.id\n    ).length;\n    \n    const connectionsInfo = document.createElement('p');\n    connectionsInfo.innerHTML = `<strong>Connexions:</strong> ${connections}`;\n    basicInfo.appendChild(connectionsInfo);\n    \n    content.appendChild(basicInfo);\n    panel.appendChild(content);\n    \n    this.shadowRoot.querySelector('.graph-container').appendChild(panel);\n  }\n  \n  /**\n   * Affiche une notification temporaire\n   */\n  showNotification(message, type = 'info') {\n    const oldNotification = this.shadowRoot.querySelector('.notification');\n    if (oldNotification) {\n      oldNotification.remove();\n    }\n    \n    const notification = document.createElement('div');\n    notification.className = `notification ${type}`;\n    notification.textContent = message;\n    \n    this.shadowRoot.querySelector('.graph-container').appendChild(notification);\n    \n    setTimeout(() => {\n      notification.classList.add('fade-out');\n      setTimeout(() => notification.remove(), 500);\n    }, 3000);\n  }\n\n  /**\n   * Affiche une infobulle avec les détails d'un nœud\n   */\n  showTooltip(node, x, y) {\n    this.hideTooltip();\n    \n    if (this.tooltipTimeout) {\n      clearTimeout(this.tooltipTimeout);\n    }\n    \n    this.tooltipTimeout = setTimeout(() => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'tooltip';\n      \n      const title = document.createElement('h3');\n      title.textContent = node.label;\n      tooltip.appendChild(title);\n      \n      if (node.uri) {\n        const uri = document.createElement('p');\n        uri.innerHTML = `<strong>URI:</strong> ${node.uri}`;\n        tooltip.appendChild(uri);\n      }\n      \n      const connections = this.links.filter(l => \n        l.source.id === node.id || l.target.id === node.id\n      ).length;\n      const connectionsText = document.createElement('p');\n      connectionsText.innerHTML = `<strong>Connexions:</strong> ${connections}`;\n      tooltip.appendChild(connectionsText);\n      \n      tooltip.style.left = `${x + 15}px`;\n      tooltip.style.top = `${y - 15}px`;\n      \n      this.shadowRoot.querySelector('.graph-container').appendChild(tooltip);\n    }, 200);\n  }\n  \n  /**\n   * Cache l'infobulle\n   */\n  hideTooltip() {\n    if (this.tooltipTimeout) {\n      clearTimeout(this.tooltipTimeout);\n    }\n    \n    const tooltip = this.shadowRoot.querySelector('.tooltip');\n    if (tooltip) {\n      tooltip.remove();\n    }\n  }\n  \n  /**\n   * Affiche un menu contextuel pour un nœud\n   */\n  showContextMenu(node, x, y) {\n    const oldMenu = this.shadowRoot.querySelector('.context-menu');\n    if (oldMenu) {\n      oldMenu.remove();\n    }\n    \n    const menu = document.createElement('div');\n    menu.className = 'context-menu';\n    menu.style.left = `${x}px`;\n    menu.style.top = `${y}px`;\n    \n    const queryButton = document.createElement('button');\n    queryButton.textContent = 'Récupérer les détails';\n    queryButton.addEventListener('click', () => {\n      this.executeNodeQuery(node);\n      menu.remove();\n    });\n    menu.appendChild(queryButton);\n    \n    this.shadowRoot.querySelector('.graph-container').appendChild(menu);\n    \n    // Ajuster la position si nécessaire\n    const container = this.shadowRoot.querySelector('.graph-container');\n    const menuRect = menu.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n    \n    if (menuRect.right > containerRect.right) {\n      menu.style.left = `${x - menuRect.width}px`;\n    }\n    \n    if (menuRect.bottom > containerRect.bottom) {\n      menu.style.top = `${y - menuRect.height}px`;\n    }\n  }\n\n  /**\n   * Rend le graphe avec D3.js\n   */\n  render() {\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: Arial, sans-serif;\n        }\n        .graph-container {\n          width: ${this.width}px;\n          height: ${this.height}px;\n          background-color: #f9f9f9;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          overflow: hidden;\n          position: relative;\n        }\n        svg {\n          width: 100%;\n          height: 100%;\n        }\n        .links line {\n          stroke: #999;\n          stroke-opacity: 0.6;\n          transition: stroke 0.3s, stroke-width 0.3s;\n        }\n        .nodes circle {\n          stroke: #fff;\n          stroke-width: 1.5px;\n          transition: stroke 0.3s, stroke-width 0.3s;\n        }\n        .node-label {\n          font-size: 12px;\n          pointer-events: none;\n          fill: #333;\n          text-anchor: middle;\n          dominant-baseline: middle;\n        }\n        .node-highlighted circle {\n          stroke: #ff4444 !important;\n          stroke-width: 3px !important;\n        }\n        .link-highlighted {\n          stroke: #ff4444 !important;\n          stroke-width: 2px !important;\n          stroke-opacity: 1 !important;\n        }\n        .tooltip {\n          position: absolute;\n          background: white;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          padding: 10px;\n          pointer-events: none;\n          z-index: 10;\n          box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n          max-width: 300px;\n          font-size: 12px;\n        }\n        .tooltip h3 {\n          margin: 0 0 5px 0;\n          font-size: 14px;\n        }\n        .tooltip p {\n          margin: 3px 0;\n        }\n        .node-details-panel {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          width: 350px;\n          max-height: calc(100% - 20px);\n          background: white;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          overflow: auto;\n          box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n          z-index: 5;\n          display: flex;\n          flex-direction: column;\n        }\n        .panel-header {\n          padding: 10px;\n          background: #f0f0f0;\n          border-bottom: 1px solid #ddd;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .panel-header h3 {\n          margin: 0;\n          font-size: 16px;\n        }\n        .close-btn {\n          border: none;\n          background: transparent;\n          font-size: 20px;\n          cursor: pointer;\n          padding: 0 5px;\n        }\n        .node-uri {\n          padding: 10px;\n          border-bottom: 1px solid #eee;\n          font-size: 12px;\n          word-break: break-all;\n        }\n        .panel-content {\n          padding: 10px;\n          overflow: auto;\n        }\n        .panel-content table {\n          width: 100%;\n          border-collapse: collapse;\n        }\n        .panel-content th,\n        .panel-content td {\n          text-align: left;\n          padding: 5px;\n          border-bottom: 1px solid #eee;\n          font-size: 12px;\n          word-break: break-all;\n        }\n        .context-menu {\n          position: absolute;\n          background: white;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n          padding: 5px 0;\n          z-index: 20;\n        }\n        .context-menu button {\n          display: block;\n          width: 100%;\n          border: none;\n          background: white;\n          padding: 8px 15px;\n          text-align: left;\n          cursor: pointer;\n        }\n        .context-menu button:hover {\n          background: #f0f0f0;\n        }\n        .notification {\n          position: absolute;\n          bottom: 20px;\n          left: 50%;\n          transform: translateX(-50%);\n          padding: 10px 20px;\n          border-radius: 4px;\n          z-index: 30;\n          transition: opacity 0.5s;\n        }\n        .notification.info {\n          background: #e3f2fd;\n          border: 1px solid #2196f3;\n        }\n        .notification.error {\n          background: #ffebee;\n          border: 1px solid #f44336;\n        }\n        .notification.fade-out {\n          opacity: 0;\n        }\n      </style>\n      <div class=\"graph-container\">\n        <svg></svg>\n      </div>\n    `;\n\n    this.createForceGraph();\n    this.initGlobalEventHandlers();\n  }\n  \n  /**\n   * Initialise les gestionnaires d'événements globaux\n   */\n  initGlobalEventHandlers() {\n    const container = this.shadowRoot.querySelector('.graph-container');\n    \n    container.addEventListener('click', (event) => {\n      const contextMenu = this.shadowRoot.querySelector('.context-menu');\n      if (contextMenu) {\n        contextMenu.remove();\n      }\n    });\n    \n    container.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n    });\n    \n    container.addEventListener('mouseleave', () => {\n      this.hideTooltip();\n    });\n  }\n\n  /**\n   * Crée une visualisation force-directed avec D3.js\n   */\n  createForceGraph() {\n    const svg = d3.select(this.shadowRoot.querySelector('svg'));\n    const width = this.width;\n    const height = this.height;\n    \n    svg.selectAll(\"*\").remove();\n    \n    if (!this.nodes || this.nodes.length === 0) {\n      svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height / 2 - 20)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .text(\"Aucune donnée à visualiser\");\n        \n      svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height / 2 + 20)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"14px\")\n        .text(\"Veuillez saisir un endpoint SPARQL et une requête, puis cliquez sur \\\"Exécuter\\\".\");\n        \n      return;\n    }\n\n    const nodeConnections = new Map();\n    this.nodes.forEach(node => nodeConnections.set(node.id, 0));\n    \n    this.links.forEach(link => {\n      nodeConnections.set(link.source, (nodeConnections.get(link.source) || 0) + 1);\n      nodeConnections.set(link.target, (nodeConnections.get(link.target) || 0) + 1);\n    });\n    \n    const getNodeRadius = nodeId => {\n      const connections = nodeConnections.get(nodeId);\n      return Math.max(8, Math.min(25, 8 + connections * 2));\n    };\n    \n    const simulation = d3.forceSimulation(this.nodes)\n      .force('link', d3.forceLink(this.links).id(d => d.id))\n      .force('charge', d3.forceManyBody().strength(-200))\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('collision', d3.forceCollide().radius(d => getNodeRadius(d.id) + 20))\n      .force('x', d3.forceX(width / 2).strength(0.1))\n      .force('y', d3.forceY(height / 2).strength(0.1));\n\n    const constrainNode = (d) => {\n      const radius = getNodeRadius(d.id);\n      d.x = Math.max(radius, Math.min(width - radius, d.x));\n      d.y = Math.max(radius, Math.min(height - radius, d.y));\n    };\n        \n    const link = svg.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(this.links)\n      .enter()\n      .append('line')\n      .attr('stroke', '#999')\n      .attr('stroke-width', 1);\n      \n    const nodeGroup = svg.append('g')\n      .attr('class', 'nodes')\n      .selectAll('g')\n      .data(this.nodes)\n      .enter()\n      .append('g')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended))\n      .on('mouseover', (event, d) => {\n        const connectedLinks = this.links.filter(l => \n          l.source.id === d.id || l.target.id === d.id\n        );\n        \n        const connectedNodeIds = new Set(connectedLinks.flatMap(l => \n          [l.source.id, l.target.id]\n        ));\n        \n        link.classed('link-highlighted', l => \n          l.source.id === d.id || l.target.id === d.id\n        );\n        \n        nodeGroup.classed('node-highlighted', n => \n          connectedNodeIds.has(n.id)\n        );\n        \n        this.showTooltip(d, event.offsetX, event.offsetY);\n      })\n      .on('mouseout', () => {\n        link.classed('link-highlighted', false);\n        nodeGroup.classed('node-highlighted', false);\n        this.hideTooltip();\n      })\n      .on('contextmenu', (event, d) => {\n        event.preventDefault();\n        this.showContextMenu(d, event.offsetX, event.offsetY);\n      });\n      \n    nodeGroup.append('circle')\n      .attr('r', d => getNodeRadius(d.id))\n      .attr('fill', '#69b3a2');\n    \n    nodeGroup.append('text')\n      .attr('class', 'node-label')\n      .text(d => d.label || d.id);\n        \n    simulation.on('tick', () => {\n      nodeGroup.each(constrainNode);\n      \n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n      \n      nodeGroup.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n    \n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      const radius = getNodeRadius(d.id);\n      d.fx = Math.max(radius, Math.min(width - radius, event.x));\n      d.fy = Math.max(radius, Math.min(height - radius, event.y));\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n}\n\n// Enregistrer le composant\ncustomElements.define('vis-graph', VisGraph); "],"names":["VisGraph","HTMLElement","constructor","super","this","attachShadow","mode","nodes","links","width","height","selectedNode","tooltipTimeout","currentEndpoint","observedAttributes","attributeChangedCallback","name","oldValue","newValue","parseInt","render","connectedCallback","setData","loadFromSparqlEndpoint","endpoint","query","params","URLSearchParams","append","trim","response","fetch","method","headers","Accept","body","ok","Error","status","rawData","json","lastSparqlData","transformedData","transformSparqlResults","message","length","data","error","console","_determineNodeLabelFromBinding","entityBindingValue","entityVarName","currentBinding","allVars","defaultId","extractIdFromBinding","type","value","directLabelSuffixes","suffix","directLabelKey","directLabelKeyLowerSuffix","charAt","toLowerCase","slice","bestOtherLabel","bestOtherLabelScore","descriptiveKeywords","label","title","term","description","summary","comment","text","taxon","species","organism","disease","condition","syndrome","gene","protein","ensembl","uniprot","annotation","otherVar","otherVarBinding","otherVarLower","currentScore","keyword","includes","Math","max","results","bindings","warn","nodesMap","Map","linksMap","vars","head","log","sourceVar","targetVar","forEach","binding","sourceId","sourceLabel","sourceUri","has","set","id","uri","originalData","targetId","targetLabel","targetUri","linkKey","source","target","Array","from","values","urlObj","URL","search","get","e","regexMatch","match","parts","split","lastPart","pop","executeNodeQuery","node","showNotification","getAttribute","queries","buildInformativeQueries","allData","descriptive","technical","relationships","queryType","queryContent","Object","entries","executeSparqlQuery","displayRichNodeDetails","displayBasicNodeDetails","oldPanel","shadowRoot","querySelector","remove","panel","document","createElement","className","header","textContent","style","margin","fontSize","fontWeight","closeBtn","addEventListener","appendChild","content","addBasicInfoSection","addGraphContextSection","addCompleteDescriptiveSection","addCompleteRelationshipsSection","addCompleteTechnicalSection","addDataSummary","container","section","marginBottom","borderBottom","paddingBottom","addDetailedInfoRow","extractAccessionFromURI","connections","filter","l","toString","graphContextInfo","extractGraphContext","info","isUri","context","mainSparqlVars","potentialLabelVars","v","key","valueObj","push","getReadablePropertyName","index","propContainer","padding","border","borderRadius","backgroundColor","propHeader","display","justifyContent","alignItems","propName","property","color","propType","lang","propUri","wordBreak","innerHTML","valueDiv","lineHeight","explanation","relationContainer","relationHeader","relationType","relationBadge","targetContainer","valueLabel","ontologySourceText","getSimpleOntologySource","sourceDiv","knownPrefixes","prefix","startsWith","url","hostname","pathname","pathParts","oboNamespace","toUpperCase","hashIndex","lastIndexOf","potentialNs","substring","slashIndex","titleContainer","cursor","valueType","typeBadge","fullPropUri","isVisible","marginTop","descriptiveCount","relationshipsCount","technicalCount","totalCount","isLink","row","flexDirection","labelElement","valueElement","paddingLeft","link","href","textDecoration","oboMatch","shortName","subClassOf","broader","narrower","related","sameAs","equivalentClass","BFO_0000050","RO_0002211","RO_0002212","RO_0002213","definition","hasDefinition","hasExactSynonym","hasRelatedSynonym","hasBroadSynonym","hasNarrowSynonym","prefLabel","altLabel","replace","basicInfo","connectionsInfo","oldNotification","notification","setTimeout","classList","add","showTooltip","x","y","hideTooltip","clearTimeout","tooltip","connectionsText","left","top","showContextMenu","oldMenu","menu","queryButton","menuRect","getBoundingClientRect","containerRect","right","bottom","createForceGraph","initGlobalEventHandlers","event","contextMenu","preventDefault","svg","d3","select","selectAll","attr","nodeConnections","getNodeRadius","nodeId","min","simulation","forceSimulation","force","forceLink","d","forceManyBody","strength","forceCenter","forceCollide","radius","forceX","forceY","constrainNode","enter","nodeGroup","call","drag","on","active","alphaTarget","restart","fx","fy","connectedLinks","connectedNodeIds","Set","flatMap","classed","n","offsetX","offsetY","each","customElements","define"],"mappings":"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"}